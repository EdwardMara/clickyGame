{"version":3,"sources":["components/Navbar/index.js","components/Card/index.js","components/Wrapper/index.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","score","topScore","Card","onClick","event","height","width","alt","name","src","image","Wrapper","children","App","state","friends","guessed","shuffleArray","array","i","length","j","Math","floor","random","temp","handleClick","friendName","target","currentScore","_this","guessedList","includes","restart","setState","concat","Object","toConsumableArray","this","_this2","components_Wrapper","map","friend","components_Card","key","id","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"k8nEAGe,SAASA,EAAOC,GAC3B,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,qCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBAAd,8CACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAA8BJ,EAAMK,MAApC,eAAuDL,EAAMM,YCK9DC,MAXf,SAAcP,GAEV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,QAAS,SAACC,GAAD,OAAWT,EAAMQ,QAAQC,KACpDR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKO,OAAO,MAAMC,MAAM,MAAMC,IAAKZ,EAAMa,KAAMC,IAAKd,EAAMe,kBCH3DC,SAFC,SAAAhB,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMiB,YCyE1CC,6MArEbC,MAAQ,CACNC,UACAC,QAAS,GACThB,MAAO,EACPC,SAAU,KAIZgB,aAAe,SAAAC,GACb,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACjBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,KAITQ,YAAc,SAAAtB,GACZ,IAAMuB,EAAavB,EAAMwB,OAAOrB,IAC5BsB,EAAeC,EAAKhB,MAAMd,MAAQ,EAChC+B,EAAcD,EAAKhB,MAAME,QAE3Be,EAAYC,SAASL,GACvBG,EAAKG,UAELH,EAAKI,SAAS,CACZnB,QAASe,EAAKb,aAAaa,EAAKhB,MAAMC,SACtCf,MAAO6B,EACPb,QAAO,GAAAmB,OAAAC,OAAAC,EAAA,EAAAD,CAAML,GAAN,CAAmBJ,gFAM1BW,KAAKxB,MAAMd,MAAQsC,KAAKxB,MAAMb,UAChCqC,KAAKJ,SAAS,CACZjC,SAAUqC,KAAKxB,MAAMd,QAGzBsC,KAAKJ,SAAS,CACZlC,MAAO,EACPgB,QAAS,sCAIJ,IAAAuB,EAAAD,KACP,OACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACJ,EAAD,CAAQM,MAAOsC,KAAKxB,MAAMd,MAAOC,SAAUqC,KAAKxB,MAAMb,WAEtDL,EAAAC,EAAAC,cAAC0C,EAAD,KACGF,KAAKxB,MAAMC,QAAQ0B,IAAI,SAAAC,GACtB,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,CACLC,IAAKF,EAAOG,GACZA,GAAIH,EAAOG,GACXrC,KAAMkC,EAAOlC,KACbE,MAAOgC,EAAOhC,MACdP,QAASoC,EAAKb,yBA5DVoB,aCAlBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.bb07ad9f.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./style.css\"\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                <li className='title'>Clicky Game: The Next Generation!</li>\r\n                <li className='instructions'>You lose if you click the same image twice</li>\r\n                <li className='score'>Score: {props.score} Top Score: {props.topScore}</li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\n// import \"./style.css\";\r\n\r\nfunction Card(props) {\r\n    \r\n    return (\r\n        <div className=\"card\" onClick={(event) => props.onClick(event)}>\r\n            <div className=\"img-container\">\r\n                <img height=\"200\" width=\"200\" alt={props.name} src={props.image} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Card from './components/Card';\nimport friends from './friends.json';\nimport Wrapper from './components/Wrapper';\n\nclass App extends Component {\n  state = {\n    friends,\n    guessed: [],\n    score: 0,\n    topScore: 0\n  };\n\n\n  shuffleArray = array => {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n\n  handleClick = event => {\n    const friendName = event.target.alt;\n    let currentScore = this.state.score + 1;\n    const guessedList = this.state.guessed;\n\n    if (guessedList.includes(friendName)) {\n      this.restart()\n    } else {\n      this.setState({\n        friends: this.shuffleArray(this.state.friends),\n        score: currentScore,\n        guessed: [...guessedList, friendName]\n      })\n    }\n  };\n\n  restart() {\n    if (this.state.score > this.state.topScore) {\n      this.setState({\n        topScore: this.state.score\n      })\n    }\n    this.setState({\n      score: 0,\n      guessed: []\n    })\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar score={this.state.score} topScore={this.state.topScore} />\n        {/* <Header /> */}\n        <Wrapper>\n          {this.state.friends.map(friend => {\n            return <Card\n              key={friend.id}\n              id={friend.id}\n              name={friend.name}\n              image={friend.image}\n              onClick={this.handleClick}\n            />\n          })}\n        </Wrapper>\n\n      </div>\n    )\n  };\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}